// Generated by view binder compiler. Do not edit!
package com.example.medancapilpelaporan.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.medancapilpelaporan.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout menuLaporLahir;

  @NonNull
  public final RelativeLayout menuLaporMati;

  @NonNull
  public final RelativeLayout menuLaporPindah;

  @NonNull
  public final CircleImageView profileImage;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout menuLaporLahir, @NonNull RelativeLayout menuLaporMati,
      @NonNull RelativeLayout menuLaporPindah, @NonNull CircleImageView profileImage) {
    this.rootView = rootView;
    this.menuLaporLahir = menuLaporLahir;
    this.menuLaporMati = menuLaporMati;
    this.menuLaporPindah = menuLaporPindah;
    this.profileImage = profileImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.menu_lapor_lahir;
      RelativeLayout menuLaporLahir = ViewBindings.findChildViewById(rootView, id);
      if (menuLaporLahir == null) {
        break missingId;
      }

      id = R.id.menu_lapor_mati;
      RelativeLayout menuLaporMati = ViewBindings.findChildViewById(rootView, id);
      if (menuLaporMati == null) {
        break missingId;
      }

      id = R.id.menu_lapor_pindah;
      RelativeLayout menuLaporPindah = ViewBindings.findChildViewById(rootView, id);
      if (menuLaporPindah == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, menuLaporLahir, menuLaporMati,
          menuLaporPindah, profileImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
